// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	gin "github.com/gin-gonic/gin"

	mock "github.com/stretchr/testify/mock"
)

// ApplicationHandler is an autogenerated mock type for the ApplicationHandler type
type ApplicationHandler struct {
	mock.Mock
}

// ApplyApplication provides a mock function with given fields: c
func (_m *ApplicationHandler) ApplyApplication(c *gin.Context) {
	_m.Called(c)
}

// GetApplicationById provides a mock function with given fields: c
func (_m *ApplicationHandler) GetApplicationById(c *gin.Context) {
	_m.Called(c)
}

type mockConstructorTestingTNewApplicationHandler interface {
	mock.TestingT
	Cleanup(func())
}

// NewApplicationHandler creates a new instance of ApplicationHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewApplicationHandler(t mockConstructorTestingTNewApplicationHandler) *ApplicationHandler {
	mock := &ApplicationHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
